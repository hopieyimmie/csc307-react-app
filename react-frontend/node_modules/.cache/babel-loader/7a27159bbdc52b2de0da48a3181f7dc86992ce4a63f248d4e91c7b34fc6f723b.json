{"ast":null,"code":"var _jsxFileName = \"/Users/hopeyim/GitHub/csc307-react-app/react-frontend/src/MyApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Table from './Table';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyApp() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  function removeOneCharacter(index) {\n    const updated = characters.filter((character, i) => {\n      return i !== index;\n    });\n    setCharacters(updated);\n  }\n  function updateList(person) {\n    setCharacters([...characters, person]);\n  }\n  async function fetchAll() {\n    try {\n      const response = await axios.get('http://localhost:8000/users');\n      return response.data.users_list;\n    } catch (error) {\n      //We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n  useEffect(() => {\n    fetchAll().then(result => {\n      if (result) setCharacters(result);\n    });\n  }, []);\n  async function makePostCall(person) {\n    try {\n      const response = await axios.post('http://localhost:8000/users', person);\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      characterData: characters,\n      removeCharacter: removeOneCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: updateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(MyApp, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = MyApp;\nexport default MyApp;\nvar _c;\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table","Form","jsxDEV","_jsxDEV","MyApp","_s","characters","setCharacters","removeOneCharacter","index","updated","filter","character","i","updateList","person","fetchAll","response","get","data","users_list","error","console","log","then","result","makePostCall","post","className","children","characterData","removeCharacter","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","_c","$RefreshReg$"],"sources":["/Users/hopeyim/GitHub/csc307-react-app/react-frontend/src/MyApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Table from './Table'\nimport Form from './Form'\n\nfunction MyApp() {\n\n  const [characters, setCharacters] = useState([]);\n\n  function removeOneCharacter(index) {\n    const updated = characters.filter((character, i) => {\n      return i !== index\n    });\n    setCharacters(updated);\n  }\n\n  function updateList(person) {\n    setCharacters([...characters, person]);\n  }\n\n  async function fetchAll(){\n    try {\n       const response = await axios.get('http://localhost:8000/users');\n       return response.data.users_list;     \n    }\n    catch (error){\n       //We're not handling errors. Just logging into the console.\n       console.log(error); \n       return false;         \n    }\n  }\n\n  useEffect(() => {\n    fetchAll().then( result => {\n       if (result)\n          setCharacters(result);\n     });\n  }, [] );\n\n  async function makePostCall(person){\n    try {\n       const response = await axios.post('http://localhost:8000/users', person);\n       return response;\n    }\n    catch (error) {\n       console.log(error);\n       return false;\n    }\n }\n\n  return (\n    <div className=\"container\">\n      <Table characterData={characters} removeCharacter={removeOneCharacter} />\n      <Form handleSubmit={updateList} />\n    </div>\n  );\n}\n\nexport default MyApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASW,kBAAkBA,CAACC,KAAK,EAAE;IACjC,MAAMC,OAAO,GAAGJ,UAAU,CAACK,MAAM,CAAC,CAACC,SAAS,EAAEC,CAAC,KAAK;MAClD,OAAOA,CAAC,KAAKJ,KAAK;IACpB,CAAC,CAAC;IACFF,aAAa,CAACG,OAAO,CAAC;EACxB;EAEA,SAASI,UAAUA,CAACC,MAAM,EAAE;IAC1BR,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAES,MAAM,CAAC,CAAC;EACxC;EAEA,eAAeC,QAAQA,CAAA,EAAE;IACvB,IAAI;MACD,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,6BAA6B,CAAC;MAC/D,OAAOD,QAAQ,CAACE,IAAI,CAACC,UAAU;IAClC,CAAC,CACD,OAAOC,KAAK,EAAC;MACV;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,KAAK;IACf;EACF;EAEAvB,SAAS,CAAC,MAAM;IACdkB,QAAQ,EAAE,CAACQ,IAAI,CAAEC,MAAM,IAAI;MACxB,IAAIA,MAAM,EACPlB,aAAa,CAACkB,MAAM,CAAC;IAC1B,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAE;EAEP,eAAeC,YAAYA,CAACX,MAAM,EAAC;IACjC,IAAI;MACD,MAAME,QAAQ,GAAG,MAAMlB,KAAK,CAAC4B,IAAI,CAAC,6BAA6B,EAAEZ,MAAM,CAAC;MACxE,OAAOE,QAAQ;IAClB,CAAC,CACD,OAAOI,KAAK,EAAE;MACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,KAAK;IACf;EACH;EAEC,oBACElB,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB1B,OAAA,CAACH,KAAK;MAAC8B,aAAa,EAAExB,UAAW;MAACyB,eAAe,EAAEvB;IAAmB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACzEhC,OAAA,CAACF,IAAI;MAACmC,YAAY,EAAEtB;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9B;AAEV;AAAC9B,EAAA,CAnDQD,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAqDd,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}